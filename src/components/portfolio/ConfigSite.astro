---
import { languages } from "../../i18n/ui";
import {
    useTranslatePath,
    getLangFromUrl,
    useTranslations,
} from "../../i18n/utils";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
const translatePath = useTranslatePath(lang);
const { pathname } = Astro.url;
const path = pathname.split(lang)[1] || pathname;
---

<div class="nav-buttons">
    <div class="theme-button">
        <i class="ri-moon-fill icon-small" id="theme-icon"></i>
        <select name="theme" id="select-theme">
            <option value="auto">{t("nav-buttons.auto")}</option>
            <option value="light">{t("nav-buttons.light")}</option>
            <option value="dark">{t("nav-buttons.dark")}</option>
        </select>
    </div>

    <div class="language-selector">
        <svg
            width="14"
            height="14"
            viewBox="0 0 24 24"
            fill="currentColor"
            ><path
                fill-rule="evenodd"
                d="M8.516 3a.94.94 0 0 0-.941.94v1.15H2.94a.94.94 0 1 0 0 1.882h7.362a7.422 7.422 0 0 1-1.787 3.958 7.42 7.42 0 0 1-1.422-2.425.94.94 0 1 0-1.774.627 9.303 9.303 0 0 0 1.785 3.043 7.422 7.422 0 0 1-4.164 1.278.94.94 0 1 0 0 1.881 9.303 9.303 0 0 0 5.575-1.855 9.303 9.303 0 0 0 4.11 1.74l-.763 1.525a.968.968 0 0 0-.016.034l-1.385 2.77a.94.94 0 1 0 1.683.841l1.133-2.267h5.806l1.134 2.267a.94.94 0 0 0 1.683-.841l-1.385-2.769a.95.95 0 0 0-.018-.036l-3.476-6.951a.94.94 0 0 0-1.682 0l-1.82 3.639a7.423 7.423 0 0 1-3.593-1.256 9.303 9.303 0 0 0 2.27-5.203h1.894a.94.94 0 0 0 0-1.881H9.456V3.94A.94.94 0 0 0 8.516 3Zm6.426 11.794a1.068 1.068 0 0 1-.02.039l-.703 1.407h3.924l-1.962-3.924-1.24 2.478Z"
                clip-rule="evenodd"></path></svg
        >
        <select id="language-select">
            {
                Object.entries(languages).map(([key, value]) => (
                    <option
                        value={translatePath(
                            path === undefined ? pathname : path,
                            key,
                        )}
                        selected={key === lang}
                    >
                        {value}
                    </option>
                ))
            }
        </select>
        <a id="language-link" style="display: none;"></a>
    </div>
</div>

<style>
    .nav-buttons {
        display: flex;
        align-items: center;
        gap: 1rem;
        border-left: 0.5px solid var(--text);
        padding-left: 1rem;
        font-size: 15px;

        @media (max-width: 970px) {
            border-left: none;
            padding-left: 0;
            border-block: 1px solid var(--text);
            padding: 1.5rem 1rem;
        }
    }

    .theme-button {
        display: flex;
        align-items: center;
    }

    select {
        border: none;
        background-color: transparent;
        color: var(--text);
        padding-right: 0.5rem;
        width: fit-content;
        max-width: 88px;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    option {
        color: var(--text);
        background-color: var(--bg);
    }

    .language-selector {
        display: flex;
        position: relative;
        align-items: center;
        cursor: pointer;
    }
</style>

<script src="@scripts/config.js"></script>
